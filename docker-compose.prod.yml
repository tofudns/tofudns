services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: tofudns
      POSTGRES_PASSWORD: tofudns
      POSTGRES_DB: tofudns
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    restart: always
    networks:
      - tofudns

  coredns:
    image: ghcr.io/tofudns/coredns:1.12.0-postgresql
    depends_on:
      - postgres
    ports:
      - "53:53"
      - "53:53/udp"
    volumes:
      - ./config/Corefile:/Corefile
    restart: always
    networks:
      - tofudns

  tofudns:
    image: ghcr.io/tofudns/tofudns:latest
    container_name: tofudns-app
    depends_on:
      - postgres
      - coredns
    env_file:
      - .env
    restart: always
    networks:
      - tofudns
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tofudns.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.tofudns.entrypoints=websecure"
      - "traefik.http.routers.tofudns.tls.certresolver=letsencrypt"
      - "traefik.http.services.tofudns.loadbalancer.server.port=8080"

  traefik:
    image: traefik:v3.0
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      # Redirect HTTP to HTTPS
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/letsencrypt:/letsencrypt
    restart: always
    networks:
      - tofudns

networks:
  tofudns:
    driver: bridge 
